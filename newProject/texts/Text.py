from newProject.user.User import UserOB
from newProject.food.FoodClass import Food
from newProject.food.DrinkClass import Drink
from newProject.keys.FoodsData import foods_data
from newProject.database.BotDB import SCDB
d2 = SCDB()

botext = {
    "ToAll": {
        "Choose language": "Iltimos tilni tanlang\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫"
    },
    "UZ": {
        "Summary": "Ja'mi: ",
        "Choose": "Iltimos tanlang",
        "Main menu": "Asosiy menyu",
        "How many": "Nechta kerak?",
        "Basket is empty": "Savat bo'sh",
        "Continue?": "Davom etamizmi? üòâ",
        "Thanks": "Xaridingiz uchun raxmatüòä",
        "Payments": "To'lov turini tanlang",
        "Select one": "Nimadan boshlaymiz?",
        "Your order": "Sizning buyurtmangiz",
        "Select one again":"Iltimos tanlang",
        "Query Ok!": "Ma'lumot qabul qilindi",
        "How many foods": "Nechta ayirmoqchisiz?",
        "Enter name": "Iltimos ismingizni kiriting",
        "Text is deleted": "Buyurtmalar o'chirildi",
        "Location": "Iltimos manzilingizni yuboring",
        "Which change": "Nimani o'zgartirmoqchisiz?",
        "Expected error": "Ma'lumot noto'g'ri kiritildi!",
        "Send PN": "Iltimos telefon raqamingizni jo'nating üì≤",
        "Description": "Agar qo'shimcha ma'lumotlaringiz bo'lsa yozib qoldirishingiz mumkun",
        "Service": "Sizga nima qulay? <b>üöôYetkazib berish</b> yoki <b>üèÉ‚Äç‚ôÇOlib ketish</b>\n\nEslatib o'tamiz yetkazib berish xizmati: 15000 so'm",
    },
   "RU": {
        "Summary": "–û–±—â–µ–µ: ",
        "Choose": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ",
        "Main menu": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        "How many": "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ?",
        "Basket is empty": "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞",
        "Thanks": "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—Éüòä",
        "Continue?": "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º? üòâ",
        "Payments": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã",
        "Select one": "–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?",
        "Your order": "–í–∞—à –∑–∞–∫–∞–∑",
        "Select one again":"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ(RU)",
        "Query Ok!": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞",
        "How many foods": "–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã—á–µ—Å—Ç—å?",
        "Enter name": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è",
        "Text is deleted": "–ó–∞–∫–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã",
        "Location": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å",
        "Which change": "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
        "Expected error": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!",
        "Send PN": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì≤",
        "Description": "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        "Service": "–ß—Ç–æ –≤–∞–º —É–¥–æ–±–Ω–æ? <b>üöô–î–æ—Å—Ç–∞–≤–∫–∞</b> –∏–ª–∏ <b>üèÉ –°–∞–º–æ–≤—ã–≤–æ–∑</b>\n\n–ù–∞–ø–æ–º–Ω–∏–º, —á—Ç–æ —É—Å–ª—É–≥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: 15000 –°—É–º",
   }
}

settings_text = {
    "UZ":{
        "Change language": "Tilni tanlang",
        "Change username": "Yangi username ni kiriting",
        "Change phone_number": "Yangi telefon raqamni kiriting",
    },
    "RU":{
        "Change language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
        "Change username": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "Change phone_number": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    }
}

dis_and_abus = {
    'UZ':{
        "Discounts": "Buyerda korxonaning aksyialar turadi",
        "About us": "Buyerda korxona haqidagi ma'lumotlar turadi",
    },
    'RU': {
        "Discounts": "–ó–¥–µ—Å—å –∞–∫—Ü–∏–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è —Å—Ç–æ—è—Ç",
        "About us": "–í–æ—Ç –≥–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏ —Å—Ç–æ–∏—Ç(RU)",
    }
}

async def data_of_user(user: UserOB):
    if user.language == 'UZ':
        all_data = f"""
Til: üá∫üáø
Foydalanuvchi ismi: {user.username}
Foydalanuvchi telefon raqami: {user.phone_number}
"""
        return all_data
    else:
        all_data = f"""
–Ø–∑—ã–∫: üá∑üá∫
–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.phone_number}
"""
        return all_data

async def return_caption_of_food(user: UserOB,food: Food):
    if user.language == 'UZ':
        caption = f"""
Ovqat nomi: {food.name}
Ovqat narxi: {food.cost}
"""
        return caption
    else:
        caption = f"""
–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞(RU): {food.name}
–°—Ç–æ–∏–º–æ—Å—Ç—å –µ–¥—ã(RU): {food.cost}
"""
        return caption

async def return_orders(user: UserOB, d: dict):
    """
    Bu metod userni savatga nimalar to'plaganini ko'rsatadi
    üá∑üá∫
    """
    check_paper = ""
    summa = 0;
    try:
        for key, value in d.items():
            food = await __ro_helper(user, key)
            check_paper += f"{key}:\n{food.cost} * {value} = {food.cost * value}\n\n"
            summa += int(food.cost * value)

        if user.status == "üöôYetkazib berish" or user.status == "üöô–î–æ—Å—Ç–∞–≤–∫–∞":
            check_paper += f"\n{user.status[1:]}:\n{summa} + 15000 = {summa + int(15000)}\n"
            summa += int(15000)
            check_paper += f"""{botext[user.language]["Summary"]}{summa}"""

        else:
            check_paper += f"""{botext[user.language]["Summary"]}{summa}"""

        return [check_paper, summa]

    except AttributeError:
        return None


async def __ro_helper(user: UserOB, key: str):
    foods = foods_data[user.language]
    for k,v in foods.items():
        if v.name == key:
            return v

async def final_check(user: UserOB, orders: dict):
    check_list = await return_orders(user, orders)
    user_data = ""
    if user.language == 'UZ':
        user_data = f"""
Buyurtmachi ismi: {user.username}
Telefon raqam: {user.phone_number}
Tili: {'uz'}
=======================
Qo'shimcha ma'lumotlar: {user.description}
=======================
Buyurtma: \n{check_list[0]}

"""
    else :
        user_data = f"""
–ò–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞: {user.username}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user.phone_number}
–Ø–∑—ã–∫: {'uz'}
=======================
–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {user.description}
=======================
–ó–∞–∫–∞–∑: \n{check_list[0]}

"""

    await d2.delete_from_base(user.user_id)
    return user_data,check_list[1]